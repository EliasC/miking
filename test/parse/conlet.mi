

lang mcore

let example1 = {

  type Ty1 :: *     -- Defines a new type constructor with arity 0

  tlet Ty2 = Ty1    -- Defines a new name for a type value

  data foo : Ty2    -- Defines a new data constructor

  let bar = foo     -- Defines a new name for a term value

}


let example2 = {

  type Ty1 :: *                   -- Defines a new type constructor

  tlet Ty2 = (lam X::*. X) Ty1    -- A new type value after evaulating a type expression

  data foo : Ty2                  -- Defines a new data constructor

  let bar = (lam x:Ty2. x) foo    -- A new term value after evaluating a term expression

}


let example3 = {

  type Ty1 :: * -> *             -- Defines a new type constructor with arity 1

  data foo : Ty1 Int             -- Defines a new data constructor with arity 1

  let bar = foo 5                -- A new term value by constructing a data value

}
