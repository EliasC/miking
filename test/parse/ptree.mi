
lang mcore

-- Define a data type
type Tree :: * -> *

-- Define two data constructors
data Node : all A. Tree A -> Tree A -> Tree A
data Leaf : all A. A -> Tree A

-- Create a term of data type Tree
let t1 = Node (Node (Leaf 1) (Leaf2)) (Leaf 3)

-- A simple recursive function
let countLeafs = Lam A. lam t:Tree A.
  match t with
    case Node n1 n2 -> addi (countLeafs n1) (countLeafs n2)
  | case Leaf _     -> 1
