
lang mcore

let m = {
-- Define a data type
type Tree :: *

-- Define two data constructors
data Node : Tree -> Tree -> Tree
data Leaf : Int -> Tree

-- Define a function that checks if the input is a leaf or not
pub isLeaf = lam t:Tree.
  match t with
    case Node _ _ -> false
  | case Leaf _   -> true

}


-- Create a term of data type Tree
let t1 = m.Node (m.Node (m.Leaf 1) (m.Leaf 2)) (m.Leaf 3) in
m.isLeaf t1


-- Unit tests of the isLeaf() function
utest (isLeaf t1) false
utest (isLeaf (Leaf(1))) true
