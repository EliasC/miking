

lang mcore
/*
// Define a data type
tcon Tree(*)

// Define two data constructors
dcon all A. Node(Tree(A),Tree(A)) => Tree(A)
dcon all A. Leaf(A) => Tree(A)

// Create a term of data type Tree
let t1 = Node(Node(Leaf(1),Leaf(2)),Leaf(3))

let countLeafs = lam t:Tree.
  match t with
    case Node(n1,n2) => addi (countLeafs n1) (countLeafs n2)
  | case Leaf(_) => 1
*/