// Miking is licensed under the MIT license.
// Copyright (C) David Broman. See file LICENSE.txt
//
// Test differnt ways of using data types

#lang ragnar

type Tree(a) 

data Node(a:Tree(a),b:Tree(a)) => Tree(a)
data Leaf(x:a) => Tree(a)

/*
def count(tree:Tree(Int)) -> Int {
    match tree{
          Node(t1,t2) => count(t1) + count(t2)
          Leaf(i) => i
    }
}

utest count(Node(Node(Leaf(5),Leaf(8)),Leaf(7)))        20

//Possible syntax
datatype Tree(a){
  Node(a:Tree(a),b:Tree(a)) 
  Leaf(x:a) 
}
*/

